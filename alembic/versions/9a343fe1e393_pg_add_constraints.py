"""Add constraints

Revision ID: 9a343fe1e393
Revises: 377e674b2401
Create Date: 2025-03-16 15:33:06.835289

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9a343fe1e393'
down_revision: Union[str, None] = '377e674b2401'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('idx_care_site_id_1', 'care_site', ['care_site_id'], unique=False)
    op.create_foreign_key(None, 'care_site', 'concept', ['place_of_service_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'care_site', 'location', ['location_id'], ['location_id'])
    op.create_foreign_key(None, 'cohort_definition', 'concept', ['subject_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'cohort_definition', 'concept', ['definition_type_concept_id'], ['concept_id'])
    op.create_index('idx_concept_class_id', 'concept', ['concept_class_id'], unique=False)
    op.create_index('idx_concept_code', 'concept', ['concept_code'], unique=False)
    op.create_index('idx_concept_concept_id', 'concept', ['concept_id'], unique=False)
    op.create_index('idx_concept_domain_id', 'concept', ['domain_id'], unique=False)
    op.create_index('idx_concept_vocabluary_id', 'concept', ['vocabulary_id'], unique=False)
    op.create_foreign_key(None, 'concept_ancestor', 'concept', ['descendant_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'concept_ancestor', 'concept', ['ancestor_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'concept_class', 'concept', ['concept_class_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'concept_relationship', 'concept', ['concept_id_1'], ['concept_id'])
    op.create_foreign_key(None, 'concept_relationship', 'relationship', ['relationship_id'], ['relationship_id'])
    op.create_foreign_key(None, 'concept_relationship', 'concept', ['concept_id_2'], ['concept_id'])
    op.create_foreign_key(None, 'concept_synonym', 'concept', ['concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'concept_synonym', 'concept', ['language_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'condition_era', 'person', ['person_id'], ['person_id'])
    op.create_foreign_key(None, 'condition_era', 'concept', ['condition_concept_id'], ['concept_id'])
    op.create_index('idx_condition_concept_id_1', 'condition_occurrence', ['condition_concept_id'], unique=False)
    op.create_index('idx_condition_person_id_1', 'condition_occurrence', ['person_id'], unique=False)
    op.create_index('idx_condition_visit_id_1', 'condition_occurrence', ['visit_occurrence_id'], unique=False)
    op.create_foreign_key(None, 'condition_occurrence', 'concept', ['condition_status_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'condition_occurrence', 'visit_detail', ['visit_detail_id'], ['visit_detail_id'])
    op.create_foreign_key(None, 'condition_occurrence', 'provider', ['provider_id'], ['provider_id'])
    op.create_foreign_key(None, 'condition_occurrence', 'concept', ['condition_type_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'condition_occurrence', 'concept', ['condition_source_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'condition_occurrence', 'concept', ['condition_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'condition_occurrence', 'person', ['person_id'], ['person_id'])
    op.create_foreign_key(None, 'condition_occurrence', 'visit_occurrence', ['visit_occurrence_id'], ['visit_occurrence_id'])
    op.create_foreign_key(None, 'cost', 'concept', ['drg_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'cost', 'concept', ['revenue_code_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'cost', 'concept', ['cost_type_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'cost', 'domain', ['cost_domain_id'], ['domain_id'])
    op.create_foreign_key(None, 'cost', 'concept', ['currency_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'death', 'concept', ['cause_source_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'death', 'concept', ['cause_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'death', 'concept', ['death_type_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'death', 'person', ['person_id'], ['person_id'])
    op.create_foreign_key(None, 'device_exposure', 'provider', ['provider_id'], ['provider_id'])
    op.create_foreign_key(None, 'device_exposure', 'person', ['person_id'], ['person_id'])
    op.create_foreign_key(None, 'device_exposure', 'concept', ['device_source_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'device_exposure', 'concept', ['device_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'device_exposure', 'visit_detail', ['visit_detail_id'], ['visit_detail_id'])
    op.create_foreign_key(None, 'device_exposure', 'concept', ['unit_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'device_exposure', 'visit_occurrence', ['visit_occurrence_id'], ['visit_occurrence_id'])
    op.create_foreign_key(None, 'device_exposure', 'concept', ['device_type_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'device_exposure', 'concept', ['unit_source_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'domain', 'concept', ['domain_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'dose_era', 'concept', ['drug_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'dose_era', 'concept', ['unit_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'dose_era', 'person', ['person_id'], ['person_id'])
    op.create_foreign_key(None, 'drug_era', 'concept', ['drug_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'drug_era', 'person', ['person_id'], ['person_id'])
    op.create_foreign_key(None, 'drug_exposure', 'concept', ['drug_type_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'drug_exposure', 'concept', ['drug_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'drug_exposure', 'person', ['person_id'], ['person_id'])
    op.create_foreign_key(None, 'drug_exposure', 'visit_detail', ['visit_detail_id'], ['visit_detail_id'])
    op.create_foreign_key(None, 'drug_exposure', 'concept', ['drug_source_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'drug_exposure', 'provider', ['provider_id'], ['provider_id'])
    op.create_foreign_key(None, 'drug_exposure', 'concept', ['route_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'drug_exposure', 'visit_occurrence', ['visit_occurrence_id'], ['visit_occurrence_id'])
    op.create_foreign_key(None, 'drug_strength', 'concept', ['numerator_unit_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'drug_strength', 'concept', ['drug_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'drug_strength', 'concept', ['ingredient_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'drug_strength', 'concept', ['denominator_unit_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'drug_strength', 'concept', ['amount_unit_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'episode', 'concept', ['episode_object_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'episode', 'person', ['person_id'], ['person_id'])
    op.create_foreign_key(None, 'episode', 'concept', ['episode_source_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'episode', 'concept', ['episode_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'episode', 'concept', ['episode_type_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'episode_event', 'concept', ['episode_event_field_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'episode_event', 'episode', ['episode_id'], ['episode_id'])
    op.create_index('idx_fact_relationship_id1', 'fact_relationship', ['domain_concept_id_1'], unique=False)
    op.create_index('idx_fact_relationship_id2', 'fact_relationship', ['domain_concept_id_2'], unique=False)
    op.create_index('idx_fact_relationship_id3', 'fact_relationship', ['relationship_concept_id'], unique=False)
    op.create_foreign_key(None, 'fact_relationship', 'concept', ['domain_concept_id_1'], ['concept_id'])
    op.create_foreign_key(None, 'fact_relationship', 'concept', ['relationship_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'fact_relationship', 'concept', ['domain_concept_id_2'], ['concept_id'])
    op.create_index('idx_location_id_1', 'location', ['location_id'], unique=False)
    op.create_foreign_key(None, 'location', 'concept', ['country_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'measurement', 'visit_occurrence', ['visit_occurrence_id'], ['visit_occurrence_id'])
    op.create_foreign_key(None, 'measurement', 'person', ['person_id'], ['person_id'])
    op.create_foreign_key(None, 'measurement', 'concept', ['unit_source_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'measurement', 'concept', ['measurement_type_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'measurement', 'concept', ['value_as_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'measurement', 'concept', ['unit_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'measurement', 'concept', ['measurement_source_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'measurement', 'concept', ['meas_event_field_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'measurement', 'provider', ['provider_id'], ['provider_id'])
    op.create_foreign_key(None, 'measurement', 'concept', ['measurement_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'measurement', 'visit_detail', ['visit_detail_id'], ['visit_detail_id'])
    op.create_foreign_key(None, 'measurement', 'concept', ['operator_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'metadata', 'concept', ['metadata_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'metadata', 'concept', ['value_as_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'metadata', 'concept', ['metadata_type_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'note', 'concept', ['language_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'note', 'concept', ['encoding_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'note', 'person', ['person_id'], ['person_id'])
    op.create_foreign_key(None, 'note', 'visit_occurrence', ['visit_occurrence_id'], ['visit_occurrence_id'])
    op.create_foreign_key(None, 'note', 'visit_detail', ['visit_detail_id'], ['visit_detail_id'])
    op.create_foreign_key(None, 'note', 'concept', ['note_type_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'note', 'provider', ['provider_id'], ['provider_id'])
    op.create_foreign_key(None, 'note', 'concept', ['note_event_field_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'note', 'concept', ['note_class_concept_id'], ['concept_id'])
    op.create_index('idx_note_nlp_concept_id_1', 'note_nlp', ['note_nlp_concept_id'], unique=False)
    op.create_index('idx_note_nlp_note_id_1', 'note_nlp', ['note_id'], unique=False)
    op.create_foreign_key(None, 'note_nlp', 'concept', ['note_nlp_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'note_nlp', 'concept', ['note_nlp_source_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'note_nlp', 'concept', ['section_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'observation', 'concept', ['observation_type_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'observation', 'visit_detail', ['visit_detail_id'], ['visit_detail_id'])
    op.create_foreign_key(None, 'observation', 'concept', ['value_as_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'observation', 'provider', ['provider_id'], ['provider_id'])
    op.create_foreign_key(None, 'observation', 'visit_occurrence', ['visit_occurrence_id'], ['visit_occurrence_id'])
    op.create_foreign_key(None, 'observation', 'concept', ['unit_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'observation', 'concept', ['observation_source_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'observation', 'person', ['person_id'], ['person_id'])
    op.create_foreign_key(None, 'observation', 'concept', ['observation_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'observation', 'concept', ['qualifier_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'observation', 'concept', ['obs_event_field_concept_id'], ['concept_id'])
    op.create_index('idx_observation_period_id_1', 'observation_period', ['person_id'], unique=False)
    op.create_foreign_key(None, 'observation_period', 'person', ['person_id'], ['person_id'])
    op.create_foreign_key(None, 'observation_period', 'concept', ['period_type_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'payer_plan_period', 'concept', ['payer_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'payer_plan_period', 'concept', ['sponsor_source_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'payer_plan_period', 'concept', ['payer_source_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'payer_plan_period', 'concept', ['stop_reason_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'payer_plan_period', 'concept', ['stop_reason_source_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'payer_plan_period', 'concept', ['plan_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'payer_plan_period', 'concept', ['sponsor_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'payer_plan_period', 'concept', ['plan_source_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'payer_plan_period', 'person', ['person_id'], ['person_id'])
    op.create_index('idx_gender', 'person', ['gender_concept_id'], unique=False)
    op.create_index('idx_person_id_1', 'person', ['person_id'], unique=False)
    op.create_foreign_key(None, 'person', 'care_site', ['care_site_id'], ['care_site_id'])
    op.create_foreign_key(None, 'person', 'concept', ['race_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'person', 'concept', ['gender_source_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'person', 'concept', ['ethnicity_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'person', 'provider', ['provider_id'], ['provider_id'])
    op.create_foreign_key(None, 'person', 'concept', ['ethnicity_source_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'person', 'concept', ['gender_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'person', 'location', ['location_id'], ['location_id'])
    op.create_foreign_key(None, 'person', 'concept', ['race_source_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'procedure_occurrence', 'visit_occurrence', ['visit_occurrence_id'], ['visit_occurrence_id'])
    op.create_foreign_key(None, 'procedure_occurrence', 'provider', ['provider_id'], ['provider_id'])
    op.create_foreign_key(None, 'procedure_occurrence', 'concept', ['modifier_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'procedure_occurrence', 'concept', ['procedure_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'procedure_occurrence', 'concept', ['procedure_type_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'procedure_occurrence', 'visit_detail', ['visit_detail_id'], ['visit_detail_id'])
    op.create_foreign_key(None, 'procedure_occurrence', 'person', ['person_id'], ['person_id'])
    op.create_foreign_key(None, 'procedure_occurrence', 'concept', ['procedure_source_concept_id'], ['concept_id'])
    op.create_index('idx_provider_id_1', 'provider', ['provider_id'], unique=False)
    op.create_foreign_key(None, 'provider', 'concept', ['specialty_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'provider', 'concept', ['gender_source_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'provider', 'care_site', ['care_site_id'], ['care_site_id'])
    op.create_foreign_key(None, 'provider', 'concept', ['gender_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'relationship', 'concept', ['relationship_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'source_to_concept_map', 'vocabulary', ['target_vocabulary_id'], ['vocabulary_id'])
    op.create_foreign_key(None, 'source_to_concept_map', 'concept', ['source_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'source_to_concept_map', 'concept', ['target_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'specimen', 'concept', ['specimen_type_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'specimen', 'concept', ['disease_status_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'specimen', 'person', ['person_id'], ['person_id'])
    op.create_foreign_key(None, 'specimen', 'concept', ['unit_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'specimen', 'concept', ['specimen_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'specimen', 'concept', ['anatomic_site_concept_id'], ['concept_id'])
    op.create_index('idx_visit_det_concept_id_1', 'visit_detail', ['visit_detail_concept_id'], unique=False)
    op.create_index('idx_visit_det_occ_id', 'visit_detail', ['visit_occurrence_id'], unique=False)
    op.create_index('idx_visit_det_person_id_1', 'visit_detail', ['person_id'], unique=False)
    op.create_foreign_key(None, 'visit_detail', 'concept', ['visit_detail_type_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'visit_detail', 'concept', ['visit_detail_source_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'visit_detail', 'concept', ['visit_detail_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'visit_detail', 'concept', ['discharged_to_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'visit_detail', 'provider', ['provider_id'], ['provider_id'])
    op.create_foreign_key(None, 'visit_detail', 'care_site', ['care_site_id'], ['care_site_id'])
    op.create_foreign_key(None, 'visit_detail', 'visit_occurrence', ['visit_occurrence_id'], ['visit_occurrence_id'])
    op.create_foreign_key(None, 'visit_detail', 'visit_detail', ['parent_visit_detail_id'], ['visit_detail_id'])
    op.create_foreign_key(None, 'visit_detail', 'concept', ['admitted_from_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'visit_detail', 'visit_detail', ['preceding_visit_detail_id'], ['visit_detail_id'])
    op.create_foreign_key(None, 'visit_detail', 'person', ['person_id'], ['person_id'])
    op.create_index('idx_visit_concept_id_1', 'visit_occurrence', ['visit_concept_id'], unique=False)
    op.create_index('idx_visit_person_id_1', 'visit_occurrence', ['person_id'], unique=False)
    op.create_foreign_key(None, 'visit_occurrence', 'concept', ['visit_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'visit_occurrence', 'care_site', ['care_site_id'], ['care_site_id'])
    op.create_foreign_key(None, 'visit_occurrence', 'concept', ['visit_type_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'visit_occurrence', 'person', ['person_id'], ['person_id'])
    op.create_foreign_key(None, 'visit_occurrence', 'concept', ['discharged_to_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'visit_occurrence', 'provider', ['provider_id'], ['provider_id'])
    op.create_foreign_key(None, 'visit_occurrence', 'concept', ['admitted_from_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'visit_occurrence', 'visit_occurrence', ['preceding_visit_occurrence_id'], ['visit_occurrence_id'])
    op.create_foreign_key(None, 'visit_occurrence', 'concept', ['visit_source_concept_id'], ['concept_id'])
    op.create_foreign_key(None, 'vocabulary', 'concept', ['vocabulary_concept_id'], ['concept_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'vocabulary', type_='foreignkey')
    op.drop_constraint(None, 'visit_occurrence', type_='foreignkey')
    op.drop_constraint(None, 'visit_occurrence', type_='foreignkey')
    op.drop_constraint(None, 'visit_occurrence', type_='foreignkey')
    op.drop_constraint(None, 'visit_occurrence', type_='foreignkey')
    op.drop_constraint(None, 'visit_occurrence', type_='foreignkey')
    op.drop_constraint(None, 'visit_occurrence', type_='foreignkey')
    op.drop_constraint(None, 'visit_occurrence', type_='foreignkey')
    op.drop_constraint(None, 'visit_occurrence', type_='foreignkey')
    op.drop_constraint(None, 'visit_occurrence', type_='foreignkey')
    op.drop_index('idx_visit_person_id_1', table_name='visit_occurrence')
    op.drop_index('idx_visit_concept_id_1', table_name='visit_occurrence')
    op.drop_constraint(None, 'visit_detail', type_='foreignkey')
    op.drop_constraint(None, 'visit_detail', type_='foreignkey')
    op.drop_constraint(None, 'visit_detail', type_='foreignkey')
    op.drop_constraint(None, 'visit_detail', type_='foreignkey')
    op.drop_constraint(None, 'visit_detail', type_='foreignkey')
    op.drop_constraint(None, 'visit_detail', type_='foreignkey')
    op.drop_constraint(None, 'visit_detail', type_='foreignkey')
    op.drop_constraint(None, 'visit_detail', type_='foreignkey')
    op.drop_constraint(None, 'visit_detail', type_='foreignkey')
    op.drop_constraint(None, 'visit_detail', type_='foreignkey')
    op.drop_constraint(None, 'visit_detail', type_='foreignkey')
    op.drop_index('idx_visit_det_person_id_1', table_name='visit_detail')
    op.drop_index('idx_visit_det_occ_id', table_name='visit_detail')
    op.drop_index('idx_visit_det_concept_id_1', table_name='visit_detail')
    op.drop_constraint(None, 'specimen', type_='foreignkey')
    op.drop_constraint(None, 'specimen', type_='foreignkey')
    op.drop_constraint(None, 'specimen', type_='foreignkey')
    op.drop_constraint(None, 'specimen', type_='foreignkey')
    op.drop_constraint(None, 'specimen', type_='foreignkey')
    op.drop_constraint(None, 'specimen', type_='foreignkey')
    op.drop_constraint(None, 'source_to_concept_map', type_='foreignkey')
    op.drop_constraint(None, 'source_to_concept_map', type_='foreignkey')
    op.drop_constraint(None, 'source_to_concept_map', type_='foreignkey')
    op.drop_constraint(None, 'relationship', type_='foreignkey')
    op.drop_constraint(None, 'provider', type_='foreignkey')
    op.drop_constraint(None, 'provider', type_='foreignkey')
    op.drop_constraint(None, 'provider', type_='foreignkey')
    op.drop_constraint(None, 'provider', type_='foreignkey')
    op.drop_index('idx_provider_id_1', table_name='provider')
    op.drop_constraint(None, 'procedure_occurrence', type_='foreignkey')
    op.drop_constraint(None, 'procedure_occurrence', type_='foreignkey')
    op.drop_constraint(None, 'procedure_occurrence', type_='foreignkey')
    op.drop_constraint(None, 'procedure_occurrence', type_='foreignkey')
    op.drop_constraint(None, 'procedure_occurrence', type_='foreignkey')
    op.drop_constraint(None, 'procedure_occurrence', type_='foreignkey')
    op.drop_constraint(None, 'procedure_occurrence', type_='foreignkey')
    op.drop_constraint(None, 'procedure_occurrence', type_='foreignkey')
    op.drop_constraint(None, 'person', type_='foreignkey')
    op.drop_constraint(None, 'person', type_='foreignkey')
    op.drop_constraint(None, 'person', type_='foreignkey')
    op.drop_constraint(None, 'person', type_='foreignkey')
    op.drop_constraint(None, 'person', type_='foreignkey')
    op.drop_constraint(None, 'person', type_='foreignkey')
    op.drop_constraint(None, 'person', type_='foreignkey')
    op.drop_constraint(None, 'person', type_='foreignkey')
    op.drop_constraint(None, 'person', type_='foreignkey')
    op.drop_index('idx_person_id_1', table_name='person')
    op.drop_index('idx_gender', table_name='person')
    op.drop_constraint(None, 'payer_plan_period', type_='foreignkey')
    op.drop_constraint(None, 'payer_plan_period', type_='foreignkey')
    op.drop_constraint(None, 'payer_plan_period', type_='foreignkey')
    op.drop_constraint(None, 'payer_plan_period', type_='foreignkey')
    op.drop_constraint(None, 'payer_plan_period', type_='foreignkey')
    op.drop_constraint(None, 'payer_plan_period', type_='foreignkey')
    op.drop_constraint(None, 'payer_plan_period', type_='foreignkey')
    op.drop_constraint(None, 'payer_plan_period', type_='foreignkey')
    op.drop_constraint(None, 'payer_plan_period', type_='foreignkey')
    op.drop_constraint(None, 'observation_period', type_='foreignkey')
    op.drop_constraint(None, 'observation_period', type_='foreignkey')
    op.drop_index('idx_observation_period_id_1', table_name='observation_period')
    op.drop_constraint(None, 'observation', type_='foreignkey')
    op.drop_constraint(None, 'observation', type_='foreignkey')
    op.drop_constraint(None, 'observation', type_='foreignkey')
    op.drop_constraint(None, 'observation', type_='foreignkey')
    op.drop_constraint(None, 'observation', type_='foreignkey')
    op.drop_constraint(None, 'observation', type_='foreignkey')
    op.drop_constraint(None, 'observation', type_='foreignkey')
    op.drop_constraint(None, 'observation', type_='foreignkey')
    op.drop_constraint(None, 'observation', type_='foreignkey')
    op.drop_constraint(None, 'observation', type_='foreignkey')
    op.drop_constraint(None, 'observation', type_='foreignkey')
    op.drop_constraint(None, 'note_nlp', type_='foreignkey')
    op.drop_constraint(None, 'note_nlp', type_='foreignkey')
    op.drop_constraint(None, 'note_nlp', type_='foreignkey')
    op.drop_index('idx_note_nlp_note_id_1', table_name='note_nlp')
    op.drop_index('idx_note_nlp_concept_id_1', table_name='note_nlp')
    op.drop_constraint(None, 'note', type_='foreignkey')
    op.drop_constraint(None, 'note', type_='foreignkey')
    op.drop_constraint(None, 'note', type_='foreignkey')
    op.drop_constraint(None, 'note', type_='foreignkey')
    op.drop_constraint(None, 'note', type_='foreignkey')
    op.drop_constraint(None, 'note', type_='foreignkey')
    op.drop_constraint(None, 'note', type_='foreignkey')
    op.drop_constraint(None, 'note', type_='foreignkey')
    op.drop_constraint(None, 'note', type_='foreignkey')
    op.drop_constraint(None, 'metadata', type_='foreignkey')
    op.drop_constraint(None, 'metadata', type_='foreignkey')
    op.drop_constraint(None, 'metadata', type_='foreignkey')
    op.drop_constraint(None, 'measurement', type_='foreignkey')
    op.drop_constraint(None, 'measurement', type_='foreignkey')
    op.drop_constraint(None, 'measurement', type_='foreignkey')
    op.drop_constraint(None, 'measurement', type_='foreignkey')
    op.drop_constraint(None, 'measurement', type_='foreignkey')
    op.drop_constraint(None, 'measurement', type_='foreignkey')
    op.drop_constraint(None, 'measurement', type_='foreignkey')
    op.drop_constraint(None, 'measurement', type_='foreignkey')
    op.drop_constraint(None, 'measurement', type_='foreignkey')
    op.drop_constraint(None, 'measurement', type_='foreignkey')
    op.drop_constraint(None, 'measurement', type_='foreignkey')
    op.drop_constraint(None, 'measurement', type_='foreignkey')
    op.drop_constraint(None, 'location', type_='foreignkey')
    op.drop_index('idx_location_id_1', table_name='location')
    op.drop_constraint(None, 'fact_relationship', type_='foreignkey')
    op.drop_constraint(None, 'fact_relationship', type_='foreignkey')
    op.drop_constraint(None, 'fact_relationship', type_='foreignkey')
    op.drop_index('idx_fact_relationship_id3', table_name='fact_relationship')
    op.drop_index('idx_fact_relationship_id2', table_name='fact_relationship')
    op.drop_index('idx_fact_relationship_id1', table_name='fact_relationship')
    op.drop_constraint(None, 'episode_event', type_='foreignkey')
    op.drop_constraint(None, 'episode_event', type_='foreignkey')
    op.drop_constraint(None, 'episode', type_='foreignkey')
    op.drop_constraint(None, 'episode', type_='foreignkey')
    op.drop_constraint(None, 'episode', type_='foreignkey')
    op.drop_constraint(None, 'episode', type_='foreignkey')
    op.drop_constraint(None, 'episode', type_='foreignkey')
    op.drop_constraint(None, 'drug_strength', type_='foreignkey')
    op.drop_constraint(None, 'drug_strength', type_='foreignkey')
    op.drop_constraint(None, 'drug_strength', type_='foreignkey')
    op.drop_constraint(None, 'drug_strength', type_='foreignkey')
    op.drop_constraint(None, 'drug_strength', type_='foreignkey')
    op.drop_constraint(None, 'drug_exposure', type_='foreignkey')
    op.drop_constraint(None, 'drug_exposure', type_='foreignkey')
    op.drop_constraint(None, 'drug_exposure', type_='foreignkey')
    op.drop_constraint(None, 'drug_exposure', type_='foreignkey')
    op.drop_constraint(None, 'drug_exposure', type_='foreignkey')
    op.drop_constraint(None, 'drug_exposure', type_='foreignkey')
    op.drop_constraint(None, 'drug_exposure', type_='foreignkey')
    op.drop_constraint(None, 'drug_exposure', type_='foreignkey')
    op.drop_constraint(None, 'drug_era', type_='foreignkey')
    op.drop_constraint(None, 'drug_era', type_='foreignkey')
    op.drop_constraint(None, 'dose_era', type_='foreignkey')
    op.drop_constraint(None, 'dose_era', type_='foreignkey')
    op.drop_constraint(None, 'dose_era', type_='foreignkey')
    op.drop_constraint(None, 'domain', type_='foreignkey')
    op.drop_constraint(None, 'device_exposure', type_='foreignkey')
    op.drop_constraint(None, 'device_exposure', type_='foreignkey')
    op.drop_constraint(None, 'device_exposure', type_='foreignkey')
    op.drop_constraint(None, 'device_exposure', type_='foreignkey')
    op.drop_constraint(None, 'device_exposure', type_='foreignkey')
    op.drop_constraint(None, 'device_exposure', type_='foreignkey')
    op.drop_constraint(None, 'device_exposure', type_='foreignkey')
    op.drop_constraint(None, 'device_exposure', type_='foreignkey')
    op.drop_constraint(None, 'device_exposure', type_='foreignkey')
    op.drop_constraint(None, 'death', type_='foreignkey')
    op.drop_constraint(None, 'death', type_='foreignkey')
    op.drop_constraint(None, 'death', type_='foreignkey')
    op.drop_constraint(None, 'death', type_='foreignkey')
    op.drop_constraint(None, 'cost', type_='foreignkey')
    op.drop_constraint(None, 'cost', type_='foreignkey')
    op.drop_constraint(None, 'cost', type_='foreignkey')
    op.drop_constraint(None, 'cost', type_='foreignkey')
    op.drop_constraint(None, 'cost', type_='foreignkey')
    op.drop_constraint(None, 'condition_occurrence', type_='foreignkey')
    op.drop_constraint(None, 'condition_occurrence', type_='foreignkey')
    op.drop_constraint(None, 'condition_occurrence', type_='foreignkey')
    op.drop_constraint(None, 'condition_occurrence', type_='foreignkey')
    op.drop_constraint(None, 'condition_occurrence', type_='foreignkey')
    op.drop_constraint(None, 'condition_occurrence', type_='foreignkey')
    op.drop_constraint(None, 'condition_occurrence', type_='foreignkey')
    op.drop_constraint(None, 'condition_occurrence', type_='foreignkey')
    op.drop_index('idx_condition_visit_id_1', table_name='condition_occurrence')
    op.drop_index('idx_condition_person_id_1', table_name='condition_occurrence')
    op.drop_index('idx_condition_concept_id_1', table_name='condition_occurrence')
    op.drop_constraint(None, 'condition_era', type_='foreignkey')
    op.drop_constraint(None, 'condition_era', type_='foreignkey')
    op.drop_constraint(None, 'concept_synonym', type_='foreignkey')
    op.drop_constraint(None, 'concept_synonym', type_='foreignkey')
    op.drop_constraint(None, 'concept_relationship', type_='foreignkey')
    op.drop_constraint(None, 'concept_relationship', type_='foreignkey')
    op.drop_constraint(None, 'concept_relationship', type_='foreignkey')
    op.drop_constraint(None, 'concept_class', type_='foreignkey')
    op.drop_constraint(None, 'concept_ancestor', type_='foreignkey')
    op.drop_constraint(None, 'concept_ancestor', type_='foreignkey')
    op.drop_index('idx_concept_vocabluary_id', table_name='concept')
    op.drop_index('idx_concept_domain_id', table_name='concept')
    op.drop_index('idx_concept_concept_id', table_name='concept')
    op.drop_index('idx_concept_code', table_name='concept')
    op.drop_index('idx_concept_class_id', table_name='concept')
    op.drop_constraint(None, 'cohort_definition', type_='foreignkey')
    op.drop_constraint(None, 'cohort_definition', type_='foreignkey')
    op.drop_constraint(None, 'care_site', type_='foreignkey')
    op.drop_constraint(None, 'care_site', type_='foreignkey')
    op.drop_index('idx_care_site_id_1', table_name='care_site')
    # ### end Alembic commands ###
