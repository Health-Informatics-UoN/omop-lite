"""Create tables

Revision ID: 377e674b2401
Revises:
Create Date: 2025-03-16 15:04:51.980722

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from alembic import context


# revision identifiers, used by Alembic.
revision: str = "377e674b2401"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Get schema from config
    schema = context.config.attributes['schema']
    
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "cdm_source",
        sa.Column("cdm_source_name", sa.String(length=255), nullable=False),
        sa.Column("cdm_source_abbreviation", sa.String(length=25), nullable=False),
        sa.Column("cdm_holder", sa.String(length=255), nullable=False),
        sa.Column("source_description", sa.Text(), nullable=True),
        sa.Column(
            "source_documentation_reference", sa.String(length=255), nullable=True
        ),
        sa.Column("cdm_etl_reference", sa.String(length=255), nullable=True),
        sa.Column("source_release_date", sa.Date(), nullable=False),
        sa.Column("cdm_release_date", sa.Date(), nullable=False),
        sa.Column("cdm_version", sa.String(length=10), nullable=True),
        sa.Column("cdm_version_concept_id", sa.Integer(), nullable=False),
        sa.Column("vocabulary_version", sa.String(length=20), nullable=False),
        schema=schema
    )
    op.create_table(
        "cohort",
        sa.Column("cohort_definition_id", sa.Integer(), nullable=False),
        sa.Column("subject_id", sa.Integer(), nullable=False),
        sa.Column("cohort_start_date", sa.Date(), nullable=False),
        sa.Column("cohort_end_date", sa.Date(), nullable=False),
        schema=schema
    )
    op.create_table(
        "concept",
        sa.Column("concept_id", sa.Integer(), nullable=False),
        sa.Column("concept_name", sa.String(length=255), nullable=False),
        sa.Column("domain_id", sa.String(length=20), nullable=False),
        sa.Column("vocabulary_id", sa.String(length=20), nullable=False),
        sa.Column("concept_class_id", sa.String(length=20), nullable=False),
        sa.Column("standard_concept", sa.String(length=1), nullable=True),
        sa.Column("concept_code", sa.String(length=50), nullable=False),
        sa.Column("valid_start_date", sa.Date(), nullable=False),
        sa.Column("valid_end_date", sa.Date(), nullable=False),
        sa.Column("invalid_reason", sa.String(length=1), nullable=True),
        schema=schema
    )
    op.create_table(
        "cohort_definition",
        sa.Column("cohort_definition_id", sa.Integer(), nullable=False),
        sa.Column("cohort_definition_name", sa.String(length=255), nullable=False),
        sa.Column("cohort_definition_description", sa.Text(), nullable=True),
        sa.Column("definition_type_concept_id", sa.Integer(), nullable=False),
        sa.Column("cohort_definition_syntax", sa.Text(), nullable=True),
        sa.Column("subject_concept_id", sa.Integer(), nullable=False),
        sa.Column("cohort_initiation_date", sa.Date(), nullable=True),
        schema=schema
    )
    op.create_table(
        "concept_ancestor",
        sa.Column("ancestor_concept_id", sa.Integer(), nullable=False),
        sa.Column("descendant_concept_id", sa.Integer(), nullable=False),
        sa.Column("min_levels_of_separation", sa.Integer(), nullable=False),
        sa.Column("max_levels_of_separation", sa.Integer(), nullable=False),
        schema=schema
    )
    op.create_table(
        "concept_class",
        sa.Column("concept_class_id", sa.String(length=20), nullable=False),
        sa.Column("concept_class_name", sa.String(length=255), nullable=False),
        sa.Column("concept_class_concept_id", sa.Integer(), nullable=False),
        schema=schema
    )
    op.create_table(
        "concept_synonym",
        sa.Column("concept_id", sa.Integer(), nullable=False),
        sa.Column("concept_synonym_name", sa.String(length=1000), nullable=False),
        sa.Column("language_concept_id", sa.Integer(), nullable=False),
        schema=schema
    )
    op.create_table(
        "domain",
        sa.Column("domain_id", sa.String(length=20), nullable=False),
        sa.Column("domain_name", sa.String(length=255), nullable=False),
        sa.Column("domain_concept_id", sa.Integer(), nullable=False),
        schema=schema
    )
    op.create_table(
        "drug_strength",
        sa.Column("drug_concept_id", sa.Integer(), nullable=False),
        sa.Column("ingredient_concept_id", sa.Integer(), nullable=False),
        sa.Column("amount_value", sa.Numeric(), nullable=True),
        sa.Column("amount_unit_concept_id", sa.Integer(), nullable=True),
        sa.Column("numerator_value", sa.Numeric(), nullable=True),
        sa.Column("numerator_unit_concept_id", sa.Integer(), nullable=True),
        sa.Column("denominator_value", sa.Numeric(), nullable=True),
        sa.Column("denominator_unit_concept_id", sa.Integer(), nullable=True),
        sa.Column("box_size", sa.Integer(), nullable=True),
        sa.Column("valid_start_date", sa.Date(), nullable=False),
        sa.Column("valid_end_date", sa.Date(), nullable=False),
        sa.Column("invalid_reason", sa.String(length=1), nullable=True),
        schema=schema
    )
    op.create_table(
        "fact_relationship",
        sa.Column("domain_concept_id_1", sa.Integer(), nullable=False),
        sa.Column("fact_id_1", sa.Integer(), nullable=False),
        sa.Column("domain_concept_id_2", sa.Integer(), nullable=False),
        sa.Column("fact_id_2", sa.Integer(), nullable=False),
        sa.Column("relationship_concept_id", sa.Integer(), nullable=False),
        schema=schema
    )
    op.create_table(
        "location",
        sa.Column("location_id", sa.Integer(), nullable=False),
        sa.Column("address_1", sa.String(length=50), nullable=True),
        sa.Column("address_2", sa.String(length=50), nullable=True),
        sa.Column("city", sa.String(length=50), nullable=True),
        sa.Column("state", sa.String(length=2), nullable=True),
        sa.Column("zip", sa.String(length=9), nullable=True),
        sa.Column("county", sa.String(length=20), nullable=True),
        sa.Column("location_source_value", sa.String(length=50), nullable=True),
        sa.Column("country_concept_id", sa.Integer(), nullable=True),
        sa.Column("country_source_value", sa.String(length=80), nullable=True),
        sa.Column("latitude", sa.Numeric(), nullable=True),
        sa.Column("longitude", sa.Numeric(), nullable=True),
        schema=schema
    )
    op.create_table(
        "metadata",
        sa.Column("metadata_id", sa.Integer(), nullable=False),
        sa.Column("metadata_concept_id", sa.Integer(), nullable=False),
        sa.Column("metadata_type_concept_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=250), nullable=False),
        sa.Column("value_as_string", sa.String(length=250), nullable=True),
        sa.Column("value_as_concept_id", sa.Integer(), nullable=True),
        sa.Column("value_as_number", sa.Numeric(), nullable=True),
        sa.Column("metadata_date", sa.Date(), nullable=True),
        sa.Column("metadata_datetime", sa.Date(), nullable=True),
        schema=schema
    )
    op.create_table(
        "note_nlp",
        sa.Column("note_nlp_id", sa.Integer(), nullable=False),
        sa.Column("note_id", sa.Integer(), nullable=False),
        sa.Column("section_concept_id", sa.Integer(), nullable=True),
        sa.Column("snippet", sa.String(length=250), nullable=True),
        sa.Column("offset", sa.String(length=50), nullable=True),
        sa.Column("lexical_variant", sa.String(length=250), nullable=False),
        sa.Column("note_nlp_concept_id", sa.Integer(), nullable=True),
        sa.Column("note_nlp_source_concept_id", sa.Integer(), nullable=True),
        sa.Column("nlp_system", sa.String(length=250), nullable=True),
        sa.Column("nlp_date", sa.Date(), nullable=False),
        sa.Column("nlp_datetime", sa.Date(), nullable=True),
        sa.Column("term_exists", sa.String(length=1), nullable=True),
        sa.Column("term_temporal", sa.String(length=50), nullable=True),
        sa.Column("term_modifiers", sa.String(length=2000), nullable=True),
        schema=schema
    )
    op.create_table(
        "relationship",
        sa.Column("relationship_id", sa.String(length=20), nullable=False),
        sa.Column("relationship_name", sa.String(length=255), nullable=False),
        sa.Column("is_hierarchical", sa.String(length=1), nullable=False),
        sa.Column("defines_ancestry", sa.String(length=1), nullable=False),
        sa.Column("reverse_relationship_id", sa.String(length=20), nullable=False),
        sa.Column("relationship_concept_id", sa.Integer(), nullable=False),
        schema=schema
    )
    op.create_table(
        "vocabulary",
        sa.Column("vocabulary_id", sa.String(length=20), nullable=False),
        sa.Column("vocabulary_name", sa.String(length=255), nullable=False),
        sa.Column("vocabulary_reference", sa.String(length=255), nullable=True),
        sa.Column("vocabulary_version", sa.String(length=255), nullable=True),
        sa.Column("vocabulary_concept_id", sa.Integer(), nullable=False),
        schema=schema
    )
    op.create_table(
        "care_site",
        sa.Column("care_site_id", sa.Integer(), nullable=False),
        sa.Column("care_site_name", sa.String(length=255), nullable=True),
        sa.Column("place_of_service_concept_id", sa.Integer(), nullable=True),
        sa.Column("location_id", sa.Integer(), nullable=True),
        sa.Column("care_site_source_value", sa.String(length=50), nullable=True),
        sa.Column("place_of_service_source_value", sa.String(length=50), nullable=True),
        schema=schema
    )
    op.create_table(
        "concept_relationship",
        sa.Column("concept_id_1", sa.Integer(), nullable=False),
        sa.Column("concept_id_2", sa.Integer(), nullable=False),
        sa.Column("relationship_id", sa.String(length=20), nullable=False),
        sa.Column("valid_start_date", sa.Date(), nullable=False),
        sa.Column("valid_end_date", sa.Date(), nullable=False),
        sa.Column("invalid_reason", sa.String(length=1), nullable=True),
        schema=schema
    )
    op.create_table(
        "cost",
        sa.Column("cost_id", sa.Integer(), nullable=False),
        sa.Column("cost_event_id", sa.Integer(), nullable=False),
        sa.Column("cost_domain_id", sa.String(length=20), nullable=False),
        sa.Column("cost_type_concept_id", sa.Integer(), nullable=False),
        sa.Column("currency_concept_id", sa.Integer(), nullable=True),
        sa.Column("total_charge", sa.Numeric(), nullable=True),
        sa.Column("total_cost", sa.Numeric(), nullable=True),
        sa.Column("total_paid", sa.Numeric(), nullable=True),
        sa.Column("paid_by_payer", sa.Numeric(), nullable=True),
        sa.Column("paid_by_patient", sa.Numeric(), nullable=True),
        sa.Column("paid_patient_copay", sa.Numeric(), nullable=True),
        sa.Column("paid_patient_coinsurance", sa.Numeric(), nullable=True),
        sa.Column("paid_patient_deductible", sa.Numeric(), nullable=True),
        sa.Column("paid_by_primary", sa.Numeric(), nullable=True),
        sa.Column("paid_ingredient_cost", sa.Numeric(), nullable=True),
        sa.Column("paid_dispensing_fee", sa.Numeric(), nullable=True),
        sa.Column("payer_plan_period_id", sa.Integer(), nullable=True),
        sa.Column("amount_allowed", sa.Numeric(), nullable=True),
        sa.Column("revenue_code_concept_id", sa.Integer(), nullable=True),
        sa.Column("revenue_code_source_value", sa.String(length=50), nullable=True),
        sa.Column("drg_concept_id", sa.Integer(), nullable=True),
        sa.Column("drg_source_value", sa.String(length=3), nullable=True),
        schema=schema
    )
    op.create_table(
        "source_to_concept_map",
        sa.Column("source_code", sa.String(length=50), nullable=False),
        sa.Column("source_concept_id", sa.Integer(), nullable=False),
        sa.Column("source_vocabulary_id", sa.String(length=20), nullable=False),
        sa.Column("source_code_description", sa.String(length=255), nullable=True),
        sa.Column("target_concept_id", sa.Integer(), nullable=False),
        sa.Column("target_vocabulary_id", sa.String(length=20), nullable=False),
        sa.Column("valid_start_date", sa.Date(), nullable=False),
        sa.Column("valid_end_date", sa.Date(), nullable=False),
        sa.Column("invalid_reason", sa.String(length=1), nullable=True),
        schema=schema
    )
    op.create_table(
        "provider",
        sa.Column("provider_id", sa.Integer(), nullable=False),
        sa.Column("provider_name", sa.String(length=255), nullable=True),
        sa.Column("npi", sa.String(length=20), nullable=True),
        sa.Column("dea", sa.String(length=20), nullable=True),
        sa.Column("specialty_concept_id", sa.Integer(), nullable=True),
        sa.Column("care_site_id", sa.Integer(), nullable=True),
        sa.Column("provider_source_value", sa.String(length=50), nullable=True),
        sa.Column("specialty_source_value", sa.String(length=50), nullable=True),
        sa.Column("gender_concept_id", sa.Integer(), nullable=True),
        sa.Column("gender_source_value", sa.String(length=50), nullable=True),
        sa.Column("gender_source_concept_id", sa.Integer(), nullable=True),
        schema=schema
    )
    op.create_table(
        "person",
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("gender_concept_id", sa.Integer(), nullable=False),
        sa.Column("year_of_birth", sa.Integer(), nullable=False),
        sa.Column("month_of_birth", sa.Integer(), nullable=True),
        sa.Column("day_of_birth", sa.Integer(), nullable=True),
        sa.Column("birth_datetime", sa.Date(), nullable=True),
        sa.Column("race_concept_id", sa.Integer(), nullable=False),
        sa.Column("ethnicity_concept_id", sa.Integer(), nullable=False),
        sa.Column("location_id", sa.Integer(), nullable=True),
        sa.Column("provider_id", sa.Integer(), nullable=True),
        sa.Column("care_site_id", sa.Integer(), nullable=True),
        sa.Column("person_source_value", sa.String(length=50), nullable=True),
        sa.Column("gender_source_value", sa.String(length=50), nullable=True),
        sa.Column("gender_source_concept_id", sa.Integer(), nullable=True),
        sa.Column("race_source_value", sa.String(length=50), nullable=True),
        sa.Column("race_source_concept_id", sa.Integer(), nullable=True),
        sa.Column("ethnicity_source_value", sa.String(length=50), nullable=True),
        sa.Column("ethnicity_source_concept_id", sa.Integer(), nullable=True),
        schema=schema
    )
    op.create_table(
        "condition_era",
        sa.Column("condition_era_id", sa.Integer(), nullable=False),
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("condition_concept_id", sa.Integer(), nullable=False),
        sa.Column("condition_era_start_date", sa.Date(), nullable=False),
        sa.Column("condition_era_end_date", sa.Date(), nullable=False),
        sa.Column("condition_occurrence_count", sa.Integer(), nullable=True),
        schema=schema
    )
    op.create_table(
        "death",
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("death_date", sa.Date(), nullable=False),
        sa.Column("death_datetime", sa.Date(), nullable=True),
        sa.Column("death_type_concept_id", sa.Integer(), nullable=True),
        sa.Column("cause_concept_id", sa.Integer(), nullable=True),
        sa.Column("cause_source_value", sa.String(length=50), nullable=True),
        sa.Column("cause_source_concept_id", sa.Integer(), nullable=True),
        schema=schema
    )
    op.create_table(
        "dose_era",
        sa.Column("dose_era_id", sa.Integer(), nullable=False),
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("drug_concept_id", sa.Integer(), nullable=False),
        sa.Column("unit_concept_id", sa.Integer(), nullable=False),
        sa.Column("dose_value", sa.Numeric(), nullable=False),
        sa.Column("dose_era_start_date", sa.Date(), nullable=False),
        sa.Column("dose_era_end_date", sa.Date(), nullable=False),
        schema=schema
    )
    op.create_table(
        "drug_era",
        sa.Column("drug_era_id", sa.Integer(), nullable=False),
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("drug_concept_id", sa.Integer(), nullable=False),
        sa.Column("drug_era_start_date", sa.Date(), nullable=False),
        sa.Column("drug_era_end_date", sa.Date(), nullable=False),
        sa.Column("drug_exposure_count", sa.Integer(), nullable=True),
        sa.Column("gap_days", sa.Integer(), nullable=True),
        schema=schema
    )
    op.create_table(
        "episode",
        sa.Column("episode_id", sa.Integer(), nullable=False),
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("episode_concept_id", sa.Integer(), nullable=False),
        sa.Column("episode_start_date", sa.Date(), nullable=False),
        sa.Column("episode_start_datetime", sa.Date(), nullable=True),
        sa.Column("episode_end_date", sa.Date(), nullable=True),
        sa.Column("episode_end_datetime", sa.Date(), nullable=True),
        sa.Column("episode_parent_id", sa.Integer(), nullable=True),
        sa.Column("episode_number", sa.Integer(), nullable=True),
        sa.Column("episode_object_concept_id", sa.Integer(), nullable=False),
        sa.Column("episode_type_concept_id", sa.Integer(), nullable=False),
        sa.Column("episode_source_value", sa.String(length=50), nullable=True),
        sa.Column("episode_source_concept_id", sa.Integer(), nullable=True),
        schema=schema
    )
    op.create_table(
        "observation_period",
        sa.Column("observation_period_id", sa.Integer(), nullable=False),
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("observation_period_start_date", sa.Date(), nullable=False),
        sa.Column("observation_period_end_date", sa.Date(), nullable=False),
        sa.Column("period_type_concept_id", sa.Integer(), nullable=False),
        schema=schema
    )
    op.create_table(
        "payer_plan_period",
        sa.Column("payer_plan_period_id", sa.Integer(), nullable=False),
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("payer_plan_period_start_date", sa.Date(), nullable=False),
        sa.Column("payer_plan_period_end_date", sa.Date(), nullable=False),
        sa.Column("payer_concept_id", sa.Integer(), nullable=True),
        sa.Column("payer_source_value", sa.String(length=50), nullable=True),
        sa.Column("payer_source_concept_id", sa.Integer(), nullable=True),
        sa.Column("plan_concept_id", sa.Integer(), nullable=True),
        sa.Column("plan_source_value", sa.String(length=50), nullable=True),
        sa.Column("plan_source_concept_id", sa.Integer(), nullable=True),
        sa.Column("sponsor_concept_id", sa.Integer(), nullable=True),
        sa.Column("sponsor_source_value", sa.String(length=50), nullable=True),
        sa.Column("sponsor_source_concept_id", sa.Integer(), nullable=True),
        sa.Column("family_source_value", sa.String(length=50), nullable=True),
        sa.Column("stop_reason_concept_id", sa.Integer(), nullable=True),
        sa.Column("stop_reason_source_value", sa.String(length=50), nullable=True),
        sa.Column("stop_reason_source_concept_id", sa.Integer(), nullable=True),
        schema=schema
    )
    op.create_table(
        "specimen",
        sa.Column("specimen_id", sa.Integer(), nullable=False),
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("specimen_concept_id", sa.Integer(), nullable=False),
        sa.Column("specimen_type_concept_id", sa.Integer(), nullable=False),
        sa.Column("specimen_date", sa.Date(), nullable=False),
        sa.Column("specimen_datetime", sa.Date(), nullable=True),
        sa.Column("quantity", sa.Numeric(), nullable=True),
        sa.Column("unit_concept_id", sa.Integer(), nullable=True),
        sa.Column("anatomic_site_concept_id", sa.Integer(), nullable=True),
        sa.Column("disease_status_concept_id", sa.Integer(), nullable=True),
        sa.Column("specimen_source_id", sa.String(length=50), nullable=True),
        sa.Column("specimen_source_value", sa.String(length=50), nullable=True),
        sa.Column("unit_source_value", sa.String(length=50), nullable=True),
        sa.Column("anatomic_site_source_value", sa.String(length=50), nullable=True),
        sa.Column("disease_status_source_value", sa.String(length=50), nullable=True),
        schema=schema
    )
    op.create_table(
        "visit_occurrence",
        sa.Column("visit_occurrence_id", sa.Integer(), nullable=False),
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("visit_concept_id", sa.Integer(), nullable=False),
        sa.Column("visit_start_date", sa.Date(), nullable=False),
        sa.Column("visit_start_datetime", sa.Date(), nullable=True),
        sa.Column("visit_end_date", sa.Date(), nullable=False),
        sa.Column("visit_end_datetime", sa.Date(), nullable=True),
        sa.Column("visit_type_concept_id", sa.Integer(), nullable=False),
        sa.Column("provider_id", sa.Integer(), nullable=True),
        sa.Column("care_site_id", sa.Integer(), nullable=True),
        sa.Column("visit_source_value", sa.String(length=50), nullable=True),
        sa.Column("visit_source_concept_id", sa.Integer(), nullable=True),
        sa.Column("admitted_from_concept_id", sa.Integer(), nullable=True),
        sa.Column("admitted_from_source_value", sa.String(length=50), nullable=True),
        sa.Column("discharged_to_concept_id", sa.Integer(), nullable=True),
        sa.Column("discharged_to_source_value", sa.String(length=50), nullable=True),
        sa.Column("preceding_visit_occurrence_id", sa.Integer(), nullable=True),
        schema=schema
    )
    op.create_table(
        "episode_event",
        sa.Column("episode_id", sa.Integer(), nullable=False),
        sa.Column("event_id", sa.Integer(), nullable=False),
        sa.Column("episode_event_field_concept_id", sa.Integer(), nullable=False),
        schema=schema
    )
    op.create_table(
        "visit_detail",
        sa.Column("visit_detail_id", sa.Integer(), nullable=False),
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("visit_detail_concept_id", sa.Integer(), nullable=False),
        sa.Column("visit_detail_start_date", sa.Date(), nullable=False),
        sa.Column("visit_detail_start_datetime", sa.Date(), nullable=True),
        sa.Column("visit_detail_end_date", sa.Date(), nullable=False),
        sa.Column("visit_detail_end_datetime", sa.Date(), nullable=True),
        sa.Column("visit_detail_type_concept_id", sa.Integer(), nullable=False),
        sa.Column("provider_id", sa.Integer(), nullable=True),
        sa.Column("care_site_id", sa.Integer(), nullable=True),
        sa.Column("visit_detail_source_value", sa.String(length=50), nullable=True),
        sa.Column("visit_detail_source_concept_id", sa.Integer(), nullable=True),
        sa.Column("admitted_from_concept_id", sa.Integer(), nullable=True),
        sa.Column("admitted_from_source_value", sa.String(length=50), nullable=True),
        sa.Column("discharged_to_source_value", sa.String(length=50), nullable=True),
        sa.Column("discharged_to_concept_id", sa.Integer(), nullable=True),
        sa.Column("preceding_visit_detail_id", sa.Integer(), nullable=True),
        sa.Column("parent_visit_detail_id", sa.Integer(), nullable=True),
        sa.Column("visit_occurrence_id", sa.Integer(), nullable=False),
        schema=schema
    )
    op.create_table(
        "condition_occurrence",
        sa.Column("condition_occurrence_id", sa.Integer(), nullable=False),
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("condition_concept_id", sa.Integer(), nullable=False),
        sa.Column("condition_start_date", sa.Date(), nullable=False),
        sa.Column("condition_start_datetime", sa.Date(), nullable=True),
        sa.Column("condition_end_date", sa.Date(), nullable=True),
        sa.Column("condition_end_datetime", sa.Date(), nullable=True),
        sa.Column("condition_type_concept_id", sa.Integer(), nullable=False),
        sa.Column("condition_status_concept_id", sa.Integer(), nullable=True),
        sa.Column("stop_reason", sa.String(length=20), nullable=True),
        sa.Column("provider_id", sa.Integer(), nullable=True),
        sa.Column("visit_occurrence_id", sa.Integer(), nullable=True),
        sa.Column("visit_detail_id", sa.Integer(), nullable=True),
        sa.Column("condition_source_value", sa.String(length=50), nullable=True),
        sa.Column("condition_source_concept_id", sa.Integer(), nullable=True),
        sa.Column("condition_status_source_value", sa.String(length=50), nullable=True),
        schema=schema
    )
    op.create_table(
        "device_exposure",
        sa.Column("device_exposure_id", sa.Integer(), nullable=False),
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("device_concept_id", sa.Integer(), nullable=False),
        sa.Column("device_exposure_start_date", sa.Date(), nullable=False),
        sa.Column("device_exposure_start_datetime", sa.Date(), nullable=True),
        sa.Column("device_exposure_end_date", sa.Date(), nullable=True),
        sa.Column("device_exposure_end_datetime", sa.Date(), nullable=True),
        sa.Column("device_type_concept_id", sa.Integer(), nullable=False),
        sa.Column("unique_device_id", sa.String(length=255), nullable=True),
        sa.Column("production_id", sa.String(length=255), nullable=True),
        sa.Column("quantity", sa.Integer(), nullable=True),
        sa.Column("provider_id", sa.Integer(), nullable=True),
        sa.Column("visit_occurrence_id", sa.Integer(), nullable=True),
        sa.Column("visit_detail_id", sa.Integer(), nullable=True),
        sa.Column("device_source_value", sa.String(length=50), nullable=True),
        sa.Column("device_source_concept_id", sa.Integer(), nullable=True),
        sa.Column("unit_concept_id", sa.Integer(), nullable=True),
        sa.Column("unit_source_value", sa.String(length=50), nullable=True),
        sa.Column("unit_source_concept_id", sa.Integer(), nullable=True),
        schema=schema
    )
    op.create_table(
        "drug_exposure",
        sa.Column("drug_exposure_id", sa.Integer(), nullable=False),
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("drug_concept_id", sa.Integer(), nullable=False),
        sa.Column("drug_exposure_start_date", sa.Date(), nullable=False),
        sa.Column("drug_exposure_start_datetime", sa.Date(), nullable=True),
        sa.Column("drug_exposure_end_date", sa.Date(), nullable=False),
        sa.Column("drug_exposure_end_datetime", sa.Date(), nullable=True),
        sa.Column("verbatim_end_date", sa.Date(), nullable=True),
        sa.Column("drug_type_concept_id", sa.Integer(), nullable=False),
        sa.Column("stop_reason", sa.String(length=20), nullable=True),
        sa.Column("refills", sa.Integer(), nullable=True),
        sa.Column("quantity", sa.Numeric(), nullable=True),
        sa.Column("days_supply", sa.Integer(), nullable=True),
        sa.Column("sig", sa.Text(), nullable=True),
        sa.Column("route_concept_id", sa.Integer(), nullable=True),
        sa.Column("lot_number", sa.String(length=50), nullable=True),
        sa.Column("provider_id", sa.Integer(), nullable=True),
        sa.Column("visit_occurrence_id", sa.Integer(), nullable=True),
        sa.Column("visit_detail_id", sa.Integer(), nullable=True),
        sa.Column("drug_source_value", sa.String(length=50), nullable=True),
        sa.Column("drug_source_concept_id", sa.Integer(), nullable=True),
        sa.Column("route_source_value", sa.String(length=50), nullable=True),
        sa.Column("dose_unit_source_value", sa.String(length=50), nullable=True),
        schema=schema
    )
    op.create_table(
        "measurement",
        sa.Column("measurement_id", sa.Integer(), nullable=False),
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("measurement_concept_id", sa.Integer(), nullable=False),
        sa.Column("measurement_date", sa.Date(), nullable=False),
        sa.Column("measurement_datetime", sa.Date(), nullable=True),
        sa.Column("measurement_time", sa.String(length=10), nullable=True),
        sa.Column("measurement_type_concept_id", sa.Integer(), nullable=False),
        sa.Column("operator_concept_id", sa.Integer(), nullable=True),
        sa.Column("value_as_number", sa.Numeric(), nullable=True),
        sa.Column("value_as_concept_id", sa.Integer(), nullable=True),
        sa.Column("unit_concept_id", sa.Integer(), nullable=True),
        sa.Column("range_low", sa.Numeric(), nullable=True),
        sa.Column("range_high", sa.Numeric(), nullable=True),
        sa.Column("provider_id", sa.Integer(), nullable=True),
        sa.Column("visit_occurrence_id", sa.Integer(), nullable=True),
        sa.Column("visit_detail_id", sa.Integer(), nullable=True),
        sa.Column("measurement_source_value", sa.String(length=50), nullable=True),
        sa.Column("measurement_source_concept_id", sa.Integer(), nullable=True),
        sa.Column("unit_source_value", sa.String(length=50), nullable=True),
        sa.Column("unit_source_concept_id", sa.Integer(), nullable=True),
        sa.Column("value_source_value", sa.String(length=50), nullable=True),
        sa.Column("measurement_event_id", sa.Integer(), nullable=True),
        sa.Column("meas_event_field_concept_id", sa.Integer(), nullable=True),
        schema=schema
    )
    op.create_table(
        "note",
        sa.Column("note_id", sa.Integer(), nullable=False),
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("note_date", sa.Date(), nullable=False),
        sa.Column("note_datetime", sa.Date(), nullable=True),
        sa.Column("note_type_concept_id", sa.Integer(), nullable=False),
        sa.Column("note_class_concept_id", sa.Integer(), nullable=False),
        sa.Column("note_title", sa.String(length=250), nullable=True),
        sa.Column("note_text", sa.Text(), nullable=False),
        sa.Column("encoding_concept_id", sa.Integer(), nullable=False),
        sa.Column("language_concept_id", sa.Integer(), nullable=False),
        sa.Column("provider_id", sa.Integer(), nullable=True),
        sa.Column("visit_occurrence_id", sa.Integer(), nullable=True),
        sa.Column("visit_detail_id", sa.Integer(), nullable=True),
        sa.Column("note_source_value", sa.String(length=50), nullable=True),
        sa.Column("note_event_id", sa.Integer(), nullable=True),
        sa.Column("note_event_field_concept_id", sa.Integer(), nullable=True),
        schema=schema
    )
    op.create_table(
        "observation",
        sa.Column("observation_id", sa.Integer(), nullable=False),
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("observation_concept_id", sa.Integer(), nullable=False),
        sa.Column("observation_date", sa.Date(), nullable=False),
        sa.Column("observation_datetime", sa.Date(), nullable=True),
        sa.Column("observation_type_concept_id", sa.Integer(), nullable=False),
        sa.Column("value_as_number", sa.Numeric(), nullable=True),
        sa.Column("value_as_string", sa.String(length=60), nullable=True),
        sa.Column("value_as_concept_id", sa.Integer(), nullable=True),
        sa.Column("qualifier_concept_id", sa.Integer(), nullable=True),
        sa.Column("unit_concept_id", sa.Integer(), nullable=True),
        sa.Column("provider_id", sa.Integer(), nullable=True),
        sa.Column("visit_occurrence_id", sa.Integer(), nullable=True),
        sa.Column("visit_detail_id", sa.Integer(), nullable=True),
        sa.Column("observation_source_value", sa.String(length=50), nullable=True),
        sa.Column("observation_source_concept_id", sa.Integer(), nullable=True),
        sa.Column("unit_source_value", sa.String(length=50), nullable=True),
        sa.Column("qualifier_source_value", sa.String(length=50), nullable=True),
        sa.Column("value_source_value", sa.String(length=50), nullable=True),
        sa.Column("observation_event_id", sa.Integer(), nullable=True),
        sa.Column("obs_event_field_concept_id", sa.Integer(), nullable=True),
        schema=schema
    )
    op.create_table(
        "procedure_occurrence",
        sa.Column("procedure_occurrence_id", sa.Integer(), nullable=False),
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("procedure_concept_id", sa.Integer(), nullable=False),
        sa.Column("procedure_date", sa.Date(), nullable=False),
        sa.Column("procedure_datetime", sa.Date(), nullable=True),
        sa.Column("procedure_end_date", sa.Date(), nullable=True),
        sa.Column("procedure_end_datetime", sa.Date(), nullable=True),
        sa.Column("procedure_type_concept_id", sa.Integer(), nullable=False),
        sa.Column("modifier_concept_id", sa.Integer(), nullable=True),
        sa.Column("quantity", sa.Integer(), nullable=True),
        sa.Column("provider_id", sa.Integer(), nullable=True),
        sa.Column("visit_occurrence_id", sa.Integer(), nullable=True),
        sa.Column("visit_detail_id", sa.Integer(), nullable=True),
        sa.Column("procedure_source_value", sa.String(length=50), nullable=True),
        sa.Column("procedure_source_concept_id", sa.Integer(), nullable=True),
        sa.Column("modifier_source_value", sa.String(length=50), nullable=True),
        schema=schema
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("procedure_occurrence")
    op.drop_table("observation")
    op.drop_table("note")
    op.drop_table("measurement")
    op.drop_table("drug_exposure")
    op.drop_table("device_exposure")
    op.drop_table("condition_occurrence")
    op.drop_table("visit_detail")
    op.drop_table("episode_event")
    op.drop_table("visit_occurrence")
    op.drop_table("specimen")
    op.drop_table("payer_plan_period")
    op.drop_table("observation_period")
    op.drop_table("episode")
    op.drop_table("drug_era")
    op.drop_table("dose_era")
    op.drop_table("death")
    op.drop_table("condition_era")
    op.drop_table("person")
    op.drop_table("provider")
    op.drop_table("source_to_concept_map")
    op.drop_table("cost")
    op.drop_table("concept_relationship")
    op.drop_table("care_site")
    op.drop_table("vocabulary")
    op.drop_table("relationship")
    op.drop_table("note_nlp")
    op.drop_table("metadata")
    op.drop_table("location")
    op.drop_table("fact_relationship")
    op.drop_table("drug_strength")
    op.drop_table("domain")
    op.drop_table("concept_synonym")
    op.drop_table("concept_class")
    op.drop_table("concept_ancestor")
    op.drop_table("cohort_definition")
    op.drop_table("concept")
    op.drop_table("cohort")
    op.drop_table("cdm_source")
    # ### end Alembic commands ###
